subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group 'me.bristermitten'
    version '0.0.32'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier.set('javadoc')
        from javadoc.destinationDir
    }

    javadoc {
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    publishing {
        repositories {
            maven {
                def releasesRepoUrl = "https://repo.bristermitten.me/repository/maven-releases"
                def snapshotsRepoUrl = "https://repo.bristermitten.me/repository/maven-snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username project.hasProperty('mavenUser') ? mavenUser : System.getenv('MAVEN_USER')
                    password project.hasProperty('mavenPassword') ? mavenPassword : System.getenv('MAVEN_PASSWORD')
                }
            }
        }
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    }

    test {
        useJUnitPlatform()
    }
}

task publishAllToMaven {
    dependsOn subprojects.find { it.name == 'common-lib' }.tasks.getByName("publish")
    dependsOn subprojects.find { it.name == 'pdm' }.tasks.getByName("publish")
}
